/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

&mt {
    flavor = "hold-preferred";
    tapping-term-ms = <175>;
    quick-tap-ms = <175>;

    // retro-tap;
};

&lt {
    flavor = "hold-preferred";
    tapping-term-ms = <175>;
    quick-tap-ms = <175>;

    // retro-tap;
};

/ {
    macros {
        dongle_bootload_macro: bootload_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bootloader>;
            label = "BOOTLOAD_MACRO";
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <180>;
            global-quick-tap;
        };

        as: as {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };

        bmt: balanced_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;    // <---[[moderate duration]]
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
        };

        modcp: mod_copy {
            compatible = "zmk,behavior-mod-morph";
            label = "MOD_COPY";
            #binding-cells = <0>;
            bindings = <&as LS(C) C>, <&kp C>;

            mods = <(LGUI | RGUI)>;
        };

        blt: balanced_layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;    // <---[[moderate duration]]
            quick-tap-ms = <200>;
            bindings = <&mo>, <&kp>;
        };

        tmt: tap_preferred_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";

            //retro-tap;

            tapping-term-ms = <175>;    // <---[[moderate duration]]
            quick-tap-ms = <175>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };

        tlt: tap_preferred_layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";

            //retro-tap;

            tapping-term-ms = <175>;    // <---[[moderate duration]]
            quick-tap-ms = <175>;
            require-prior-idle-ms = <125>;
            bindings = <&mo>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&lt 4 ESC     &kp Q  &kp W      &kp E      &kp R            &kp T             &kp Y         &kp U         &kp I         &kp O        &kp P     &kp BACKSLASH
&kp GRAVE     &kp A  &kp S      &kp D      &kp F            &kp G             &kp H         &kp J         &kp K         &kp L        &kp SEMI  &kp SQT
&kp CAPS      &kp Z  &kp X      &kp C      &kp V            &kp B             &kp N         &kp M         &kp COMMA     &kp DOT      &kp FSLH  &kp BSLH
                                &kp LC(C)  &kp LC(V)        &lt 1 DEL         &kp SPACE     &kp BSPC      &lt 2 ENTER   &kp LBKT     &kp RBKT
                                &kp LALT   &lt 3 LEFT       &kp LSHFT         &kp TAB       &kp UP        &kp RCTRL     &lt 4 RIGHT  &kp DOWN  
            >;
        };

        layer_1 {
            bindings = <
&kp TAB        &none           &none              &none             &none          &out OUT_USB        &out OUT_USB    &none          &none          &none          &none         &none
&none          &kp NUMBER_1    &kp NUMBER_2       &kp NUMBER_3      &kp NUMBER_4   &kp NUMBER_5        &kp NUMBER_6    &kp NUMBER_7   &kp NUMBER_8   &kp NUMBER_9   &kp NUMBER_0  &none
&none          &none           &none              &none             &none          &out OUT_BLE        &out OUT_BLE    &none          &none          &none          &none         &none
                               &kp PG_UP          &kp PG_DN         &none          &none               &none           &none          &none          &none
                               &none              &none             &none          &none               &none           &none          &none          &none
            >;
        };

        layer_2 {
            bindings = <
&kp F7     &kp F8    &kp F9      &kp F10          &kp F11   &kp F12                   &kp KP_MULTIPLY    &kp KP_N7       &kp KP_N8     &kp KP_N9        &kp KP_MINUS    &kp LEFT_GUI
&none      &kp F4    &kp F5      &kp F6           &none     &none                     &kp KP_PLUS        &kp KP_N4       &kp KP_N5     &kp KP_N6        &kp KP_SLASH    &kp DEL
&none      &kp F1    &kp F2      &kp F3           &none     &none                     &kp LOCKING_NUM    &kp KP_N1       &kp KP_N2     &kp KP_N3        &kp EQUAL       &kp KP_EQUAL
                     &kp LC(C)   &mt LALT LC(V)   &kp LEFT  &kp SPACE                 &kp BSPC           &kp RIGHT       &kp KP_N0     &kp KP_DOT
                     &trans      &to 0            &to 0     &trans                    &kp UP             &kp DOWN        &none         &none
            >;
        };

        layer_3 {
            bindings = <
&kp C_VOL_UP  &kp C_VOL_DN  &kp AMPS  &kp STAR   &kp LPAR   &kp RPAR   &none  &msc SCRL_UP    &mmv MOVE_UP    &msc SCRL_DOWN     &none  &none
&kp C_BRI_UP  &kp C_BRI_DN  &kp DLLR  &kp PRCNT  &kp CARET  &kp UNDER  &none  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT    &none  &none
&none         &kp GRAVE     &kp EXCL  &kp AT     &kp HASH   &kp EQUAL  &none  &msc SCRL_LEFT  &none           &msc SCRL_RIGHT    &none  &none
                            &none     &none      &mkp LCLK  &mkp RCLK  &none  &none           &none           &none
                            &none     &none      &mkp MCLK  &none      &none  &none           &none           &none
            >;
        };

        layer_4 {
            bindings = <
&none                     &bt BT_SEL 0  &bt BT_SEL 1       &bt BT_SEL 2      &bt BT_SEL 3       &bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&sys_reset                &none         &none              &none             &none              &out OUT_USB  &out OUT_USB  &none         &none         &none         &none         &sys_reset
&dongle_bootload_macro    &none         &none              &none             &none              &out OUT_BLE  &out OUT_BLE  &none         &none         &none         &none         &none
                          &none         &none              &kp C_RW          &kp C_FF           &none         &none         &none         &none
                          &none              &none         &kp LSHFT         &none              &none         &none         &none         &none
            >;
        };
    };
};
